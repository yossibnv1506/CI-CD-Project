@NonCPS //nopez
def jsonParse(def json) {
    new groovy.json.JsonSlurperClassic().parseText(json)
}
pipeline {
    options {
        timeout(time: 10, unit: 'MINUTES')
    }
    agent {
        label 'master'
    }
    stages {
        stage('Checkout'){
            steps{
                script{
                    dir('Release'){
                        deleteDir ()
                        checkout([$class: 'GitSCM', branches: [[name: '*/Dev']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'master', url: 'https://github.com/yossibnv1506/Release']]])
                    }
                    dir('IAC'){
                        deleteDir()
                        checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'master', url: 'https://github.com/yossibnv1506/infra']]])
                    }
                }
            }
        }
        stage('Parse release.json'){
            steps{
                dir('Release') {
                    script{
                        releaseFile = jsonParse(readFile("dev.json"))
                        experimentVersion = releaseFile["release"]["services"]["experiment"]["version"]
                        hostIP = releaseFile["release"]["services"]["experiment"]["instance"]
                        print (experimentVersion)
                        print (hostIP)
                    }
                }
            }
        }
        stage ('Run Ansible on a target host to deploy APP') {
            steps {
                dir ('IAC/Ansible'){
                script {
                     sh "sed -i 's/host/${hostIP}/g' hosts"
                     sh "sed -i 's/host/${hostIP}/g' group_vars/all"
                     sh "sed -i 's/experimentVersion/${experimentVersion}/g' group_vars/all"
                     sh 'ansible-playbook -i hosts -u ubuntu -b  --private-key=/var/jenkins_home/ansible/YosKey.pem play.yml'
                }
                }
            }
        }
        
    }
    
}
